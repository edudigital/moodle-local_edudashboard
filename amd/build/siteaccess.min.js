
// This file is part of Moodle - http://moodle.org/
//
// Moodle is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// Moodle is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
/**
 * Plugin administration pages are defined here.
 *
 * @package     local_edudashboard
 * @category    admin
 * @copyright   2025 edudigital <geral@edudigital-learn.com>
 * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */  



  // This file is part of Moodle - http://moodle.org/
  //
  // Moodle is free software: you can redistribute it and/or modify
  // it under the terms of the GNU General Public License as published by
  // the Free Software Foundation, either version 3 of the License, or
  // (at your option) any later version.
  //
  // Moodle is distributed in the hope that it will be useful,
  // but WITHOUT ANY WARRANTY; without even the implied warranty of
  // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  // GNU General Public License for more details.
  //
  // You should have received a copy of the GNU General Public License
  // along with Moodle.  If not, see <http://www.gnu.org/licenses/>.
  //
  /**
   * Plugin version and other meta-data are defined here.
   *
   * @package     local_edudashboard
   * @copyright   2025 edudigital <geral@edudigital-learn.com>
   * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
   */

define([
  "jquery",
  "./chart/apexcharts",
  "./internalapi",
  "core/ajax",
  "./jquery.dataTables",
  "./dataTables.bootstrap4",
], function ($, ApexCharts, Internalapi, ajax) {
  return {
    init: function ($wwwroot,$title,$title2,$categories_weenks,$rendertable=false) {
      $("#access_filter").click(function(){
         update_everything();
      });
      if($rendertable){
        $("#enrolledusers").DataTable();
      }      

      var options = {
        series: [],
        chart: {
          height: 500,
          type: "heatmap",
        },
        xaxis: {
          categories: $categories_weenks,
        },
        plotOptions: {
          heatmap: {
            shadeIntensity: 0,
            radius: 0,
            useFillColorAsStroke: true,
          },
        },
        dataLabels: {
          enabled: false,
        },
        stroke: {
          width: 2,
          show: true,
        },
        title: {
          text: $title,
        },
        colors: ["#1babb1"],
      };

      let chartheat = new ApexCharts(
        document.getElementById("heatmap"),
        options
      );

      chartheat.render();

      var options = {
        series: [],
        chart: {
          height: 350,
          type: "area",
        },
        forecastDataPoints: {
          count: 7,
        },
        stroke: {
          width: 1,
          curve: "smooth",
        },
        xaxis: {
          type: "datetime",
          categories: [],
          tickAmount: 12,
          labels: {
            formatter: function (value, timestamp, opts) {
              return opts.dateFormatter(new Date(timestamp), "dd/MMM/y");
            },
          },
        },
        title: {
          text: $title2,
          align: "left",
          style: {
            fontSize: "12px",
            color: "#666",
          },
        },
        fill: {
          type: "gradient",
          gradient: {
            shade: "dark",
            gradientToColors: ["#FDD835"],
            shadeIntensity: 1,
            type: "horizontal",
            opacityFrom: 1,
            opacityTo: 1,
            stops: [0, 100, 100, 100],
          },
        },
      };

      let chartline = new ApexCharts(
        document.getElementById("linemap"),
        options
      );

      chartline.render();

      let SELECTOR = {
        SHADES: ".siteaccess-values-shade .shades",
      };

      generateShades();

      $(document).ready(function () {
        $("#report-loader").css("display","block");
        var data = [];

        var promise = ajax.call([
          {
            methodname: "local_edudashboard_siteaccess",
            args: { startdate: 0, enddate:0,courseid:parseInt($("#course_select").val()) },
          },
        ]);

        promise[0]
          .done(function (response) {
            var dados = JSON.parse(response.data);
            data = dados;
            generateCharts(
              dados["crs-" + $("#course_select").val()],
              JSON.parse(response.login)
            );
            //console.log(response);
          })
          .fail(function (err) {
            console.log(err);
            $("#report-loader").css("display","none");
          });
          $("#report-loader").css("display","none");
       
      });

      /**
       * Generate shades of heatmap.
       */
      function generateShades() {
        let opacity = 0;
        let numberOfShades = 15;
        let increment = 1 / (numberOfShades - 1);
        for (let index = 1; index <= numberOfShades; index++) {
          $(SELECTOR.SHADES).append(
            `<div class="shade" style="opacity: ${opacity};"><div class="shade-inner"></div></div>`
          );
          opacity += increment;
        }
        let width = 100 / numberOfShades;
        $(SELECTOR.SHADES)
          .find(".shade .shade-inner")
          .css("background-color", "#1babb1");
        $(SELECTOR.SHADES)
          .find(".shade")
          .css("width", width + "%");
      }

      function update_everything() {

        $("#report-loader").css("display","block");
        
        var datefrom = "";
        var dateto = "";
        if (
          $("#fitem_timefrom").find("input[type='checkbox']").is(":checked")
        ) {
          datefrom =
            $("#fitem_timefrom").find("select[name='fromdate[day]']").val() +
            "-" +
            $("#fitem_timefrom")
              .find("select[name='fromdate[month]']")
              .val() +
            "-" +
            $("#fitem_timefrom").find("select[name='fromdate[year]']").val();
        }

        if (
          $("#fitem_timeto").find("input[type='checkbox']").is(":checked")
        ) {
          dateto =
            $("#fitem_timeto").find("select[name='todate[day]']").val() +
            "-" +
            $("#fitem_timeto").find("select[name='todate[month]']").val() +
            "-" +
            $("#fitem_timeto").find("select[name='todate[year]']").val();
        }

       

        var promise = ajax.call([
          {
            methodname: "local_edudashboard_siteaccess",
            args: { startdate: datefrom, enddate: dateto, courseid: parseInt($("#course_select").val()) },
          },
        ]);
        promise[0]
          .done(function (response) {
            var dados = JSON.parse(response.data);
            data = dados;
            generateCharts(dados["crs-" + $("#course_select").val()], JSON.parse(response.login));
            $("#report-loader").css("display","none");
           
          })
          .fail(function (err) {
            console.log(err);
            $("#report-loader").css("display","none");
          });

      }

      function generateCharts($data, $linedata) {
        
        chartheat.updateSeries($data, true);

        if ($linedata) {
          chartline.updateOptions(
            {
              series: [
                {
                  name: "Login",
                  data: $linedata.data,
                },
              ],
              xaxis: {
                categories: $linedata.series,
              },
            },
            true
          );
        }
       
      }
    },
  };
});
